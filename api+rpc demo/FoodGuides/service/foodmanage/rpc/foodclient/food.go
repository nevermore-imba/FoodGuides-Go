// Code generated by goctl. DO NOT EDIT.
// Source: food.proto

package foodclient

import (
	"context"

	"FoodGuides/service/foodmanage/rpc/food"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddFoodRequest    = food.AddFoodRequest
	DeleteFoodRequest = food.DeleteFoodRequest
	FoodInfoResponse  = food.FoodInfoResponse
	FoodListRequest   = food.FoodListRequest
	FoodListResponse  = food.FoodListResponse
	SearchRequest     = food.SearchRequest
	StatusResponse    = food.StatusResponse

	Food interface {
		Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*FoodInfoResponse, error)
		AddFood(ctx context.Context, in *AddFoodRequest, opts ...grpc.CallOption) (*StatusResponse, error)
		DeleteFood(ctx context.Context, in *DeleteFoodRequest, opts ...grpc.CallOption) (*StatusResponse, error)
		FoodList(ctx context.Context, in *FoodListRequest, opts ...grpc.CallOption) (*FoodListResponse, error)
	}

	defaultFood struct {
		cli zrpc.Client
	}
)

func NewFood(cli zrpc.Client) Food {
	return &defaultFood{
		cli: cli,
	}
}

func (m *defaultFood) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*FoodInfoResponse, error) {
	client := food.NewFoodClient(m.cli.Conn())
	return client.Search(ctx, in, opts...)
}

func (m *defaultFood) AddFood(ctx context.Context, in *AddFoodRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	client := food.NewFoodClient(m.cli.Conn())
	return client.AddFood(ctx, in, opts...)
}

func (m *defaultFood) DeleteFood(ctx context.Context, in *DeleteFoodRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	client := food.NewFoodClient(m.cli.Conn())
	return client.DeleteFood(ctx, in, opts...)
}

func (m *defaultFood) FoodList(ctx context.Context, in *FoodListRequest, opts ...grpc.CallOption) (*FoodListResponse, error) {
	client := food.NewFoodClient(m.cli.Conn())
	return client.FoodList(ctx, in, opts...)
}
